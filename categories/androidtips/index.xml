<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Androidtips on ヤマダユキの備忘log</title>
    <link>https://sasakiyuki.github.io/categories/androidtips/</link>
    <description>Recent content in Androidtips on ヤマダユキの備忘log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 09 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sasakiyuki.github.io/categories/androidtips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AndroidTips-003-リスト表示をしてみる</title>
      <link>https://sasakiyuki.github.io/posts/first/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sasakiyuki.github.io/posts/first/</guid>
      <description>複数の似たようなデータを表示する場合にはリスト形式のViewを使うのが一般的です。 今回はそのリスト形式のViewをどのように扱うかをやっていきたいと思います。
流れ  Listを表示する Activity を追加します。 レイアウトにリストの元になるRecyclerViewを置きます RecyclerViewにリストを表示するための Adapter を用意する （リストに表示するデータを用意する） 用意したAdapterをRecyclerView にセットしてリストを表示する  この流れでいきます。
目指すリストは下の通りです。
シンプルな文字だけどリストです。
Activityを追加 特に難しいことはしませんが一応。 Empty Activity を作り今回は名前は SimpleStringListActivity としました。
レイアウトファイルにRecyclerViewを置く Androidでリスト表示をするには RecyclerVIew を使います。
まずはレイアウトファイルに配置してみましょう。
1 2 3 4 5 6 7 8 9 10  &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;LinearLayout xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34;&amp;gt; &amp;lt;android.support.v7.widget.RecyclerView android:id=&amp;#34;@+id/recyclerView&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34; /&amp;gt; &amp;lt;/LinearLayout&amp;gt;   RecyclerViewはサポートライブラリーで追加されたViewです。
RecyclerViewで表示するレイアウトを作る リストとして表示する主な要素となるレイアウトを作成します。 今回はシンプルなリストを目指すのでTextViewのみ置かれたシンプルなレイアウトファイルを作成します。
1 2 3 4 5 6 7 8 9 10 11 12 13  &amp;lt;?</description>
    </item>
    
    <item>
      <title>AndroidTips-002-画面移動してみる</title>
      <link>https://sasakiyuki.github.io/posts/android_tips_002/</link>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sasakiyuki.github.io/posts/android_tips_002/</guid>
      <description>サンプルコード 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  import android.content.Context import android.content.Intent import android.os.Bundle import android.support.v7.app.AppCompatActivity import kotlinx.android.synthetic.main.activity_main.* class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) setupButton() } private fun setupButton() { redImageView.setOnClickListener { val intent = Intent(this@MainActivity, FormActivity::class.java) startActivity(intent) } } }   Intent アプリの中での移動に限らず外への移動（例えば標準のWebブラウザに飛ばす）などに用いられる画面遷移用のコンポーネントです。 どこに移動するか　や　移動の際に渡すデータ　などを指定できます。 今回は単純に移動するためだけに使っているシンプルな使い方です。その際のIntentのコンストラクタは</description>
    </item>
    
    <item>
      <title>AndroidTips-001-押されたら何かをするを実装する</title>
      <link>https://sasakiyuki.github.io/posts/android_tips_001/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sasakiyuki.github.io/posts/android_tips_001/</guid>
      <description>サンプルコード 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  import android.os.Bundle import android.support.v7.app.AppCompatActivity import android.view.View import android.widget.ImageView import kotlinx.android.synthetic.main.activity_main.* class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) setupButton() } private fun setupButton() { // 1 val button = findViewById&amp;lt;ImageView&amp;gt;(R.</description>
    </item>
    
  </channel>
</rss>